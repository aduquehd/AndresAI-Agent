"""Add creation metadata fields to User model

Revision ID: be509f25455e
Revises: 18c534904549
Create Date: 2025-07-24 03:07:58.433826

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
import pgvector


# revision identifiers, used by Alembic.
revision: str = 'be509f25455e'
down_revision: Union[str, None] = '18c534904549'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('ip_address', sqlmodel.sql.sqltypes.AutoString(length=45), nullable=True))
    op.add_column('users', sa.Column('user_agent', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True))
    op.add_column('users', sa.Column('country', sqlmodel.sql.sqltypes.AutoString(length=2), nullable=True))
    op.add_column('users', sa.Column('region', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True))
    op.add_column('users', sa.Column('city', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True))
    
    # Add created_at column as nullable first
    op.add_column('users', sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=True))
    
    # Update existing users to have a created_at timestamp (current time)
    op.execute("UPDATE users SET created_at = NOW() WHERE created_at IS NULL")
    
    # Make the column non-nullable after setting default values
    op.alter_column('users', 'created_at', nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'created_at')
    op.drop_column('users', 'city')
    op.drop_column('users', 'region')
    op.drop_column('users', 'country')
    op.drop_column('users', 'user_agent')
    op.drop_column('users', 'ip_address')
    # ### end Alembic commands ###
